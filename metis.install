<?php

/**
 * @file
 * Schema definitions install/update/uninstall hooks.
 */

/**
 * Implements hook_install().
 */
function metis_install() {

  $t = get_t();
  drupal_set_message($t('Metis settings are available under <a href="@link">Configuration > Search and Metadata > Metis</a>.', array('@link' => 'admin/config/search/metis')));

}

/**
 * Implements hook_uninstall().
 */
function metis_uninstall() {

  // Delete our module's variables from the variables table.
  variable_del('metis_default_server');
  variable_del('metis_force_ssl');

}

/**
 * Implements hook_schema().
 */
function metis_schema() {

  $schema = array();
  $schema['metis'] = array(
    'description' => 'Stores codes to use with the Metis pixel.',
    'fields' => array(
      'code_public' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'code_private' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'used' => array(
        'type' => 'int',
        'length' => 1,
        'not null' => TRUE,
        'default' => 0,
      ),
      'server' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
  );

  return $schema;

}

/**
 * Implements hook_requirements().
 */
function metis_requirements($phase) {

  $requirements = array();
  $t = get_t();

  switch ($phase) {

    case 'runtime':
      $unused = metis_count_unused();

      if ($unused == 0) {
        $severity = REQUIREMENT_ERROR;
        $value = $t('There are no unused codes left.');
      }
      else {
        $severity = REQUIREMENT_OK;
        $value = $t('There are %count_codes unused codes left.', array('%count_codes' => $unused));
      }
      $requirements['metis_dependencies'] = array(
        'title' => $t('Metis'),
        'severity' => $severity,
        'value' => $value,
      );
      break;

  }

  return $requirements;

}

/**
 * Implements hook_field_schema().
 */
function metis_field_schema($field) {
  switch ($field['type']) {
    case 'metis' :
      $columns = array(
        'code_public' => array(
          'type' => 'varchar',
          'length' => 32,
          'not null' => FALSE,
          'sortable' => TRUE,
          'views' => TRUE,
        ),
        'code_private' => array(
          'type' => 'varchar',
          'length' => 32,
          'not null' => FALSE,
          'sortable' => TRUE,
          'views' => TRUE,
        ),
        'show' => array(
          'type' => 'int',
          'length' => 1,
          'not null' => FALSE,
          'sortable' => TRUE,
          'views' => TRUE,
        ),
        'server' => array(
          'type' => 'varchar',
          'length' => 256,
          'not null' => FALSE,
          'sortable' => TRUE,
          'views' => TRUE,
        ),
      );
      break;
  }
  return array(
    'columns' => $columns,
  );
}